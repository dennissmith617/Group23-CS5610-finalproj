{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createPostThunk, findPostsThunk, updatePostThunk, deletePostThunk } from \"../services/posts/post-thunk\";\nconst initialState = {\n  posts: [],\n  loading: false\n};\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState,\n  extraReducers: {\n    [findPostsThunk.pending]: state => {\n      state.loading = true;\n      state.posts = [];\n    },\n    [findPostsThunk.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.loading = false;\n      state.posts = payload;\n    },\n    [findPostsThunk.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error;\n    },\n    [deletePostThunk.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.loading = false;\n      state.posts = state.posts.filter(t => t._id !== payload);\n    },\n    [createPostThunk.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.loading = false;\n      state.posts.push(payload);\n    },\n    [updatePostThunk.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.loading = false;\n      const postNdx = state.posts.findIndex(t => t._id === payload._id);\n      state.posts[postNdx] = {\n        ...state.posts[postNdx],\n        ...payload\n      };\n    }\n  },\n  reducers: {}\n});\nexport const {\n  createPost,\n  deletePost\n} = postSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createPostThunk","findPostsThunk","updatePostThunk","deletePostThunk","initialState","posts","loading","postSlice","name","extraReducers","pending","state","fulfilled","payload","rejected","action","error","filter","t","_id","push","postNdx","findIndex","reducers","createPost","deletePost","actions","reducer"],"sources":["C:/Nesara_Webev_Project/Nesara-FinalProject/Group23-CS5610-finalproj/src/redux/posts-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {createPostThunk, findPostsThunk, updatePostThunk, deletePostThunk}\r\n  from \"../services/posts/post-thunk\";\r\n\r\nconst initialState = {\r\n   posts: [],\r\n   loading: false\r\n}\r\n\r\nconst postSlice = createSlice({\r\n name: 'posts',\r\n initialState,\r\n  extraReducers: {\r\n    [findPostsThunk.pending]:\r\n       (state) => {\r\n          state.loading = true\r\n          state.posts = []\r\n    },\r\n    [findPostsThunk.fulfilled]:\r\n       (state, { payload }) => {\r\n          state.loading = false\r\n          state.posts = payload\r\n    },\r\n    [findPostsThunk.rejected]:\r\n       (state, action) => {\r\n          state.loading = false\r\n          state.error = action.error\r\n    },\r\n    [deletePostThunk.fulfilled] :\r\n        (state, { payload }) => {\r\n        state.loading = false\r\n        state.posts = state.posts\r\n        .filter(t => t._id !== payload)\r\n    },\r\n    [createPostThunk.fulfilled]:\r\n          (state, { payload }) => {\r\n            state.loading = false\r\n            state.posts.push(payload)\r\n        },\r\n    [updatePostThunk.fulfilled]:\r\n      (state, { payload }) => {\r\n        state.loading = false\r\n        const postNdx = state.posts\r\n          .findIndex((t) => t._id === payload._id)\r\n        state.posts[postNdx] = {\r\n          ...state.posts[postNdx],\r\n          ...payload\r\n        }\r\n      }\r\n  },\r\n reducers: { }\r\n});\r\n\r\nexport const {createPost, deletePost} = postSlice.actions;\r\nexport default postSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,eAAe,EAAEC,cAAc,EAAEC,eAAe,EAAEC,eAAe,QAClE,8BAA8B;AAErC,MAAMC,YAAY,GAAG;EAClBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,OAAO;EACbJ,YAAY;EACXK,aAAa,EAAE;IACb,CAACR,cAAc,CAACS,OAAO,GACnBC,KAAK,IAAK;MACRA,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACN,KAAK,GAAG,EAAE;IACtB,CAAC;IACD,CAACJ,cAAc,CAACW,SAAS,GACtB,CAACD,KAAK,WAAkB;MAAA,IAAhB;QAAEE;MAAQ,CAAC;MAChBF,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,GAAGQ,OAAO;IAC3B,CAAC;IACD,CAACZ,cAAc,CAACa,QAAQ,GACrB,CAACH,KAAK,EAAEI,MAAM,KAAK;MAChBJ,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACK,KAAK,GAAGD,MAAM,CAACC,KAAK;IAChC,CAAC;IACD,CAACb,eAAe,CAACS,SAAS,GACtB,CAACD,KAAK,YAAkB;MAAA,IAAhB;QAAEE;MAAQ,CAAC;MACnBF,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CACxBY,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKN,OAAO,CAAC;IACnC,CAAC;IACD,CAACb,eAAe,CAACY,SAAS,GACpB,CAACD,KAAK,YAAkB;MAAA,IAAhB;QAAEE;MAAQ,CAAC;MACjBF,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,CAACe,IAAI,CAACP,OAAO,CAAC;IAC7B,CAAC;IACL,CAACX,eAAe,CAACU,SAAS,GACxB,CAACD,KAAK,YAAkB;MAAA,IAAhB;QAAEE;MAAQ,CAAC;MACjBF,KAAK,CAACL,OAAO,GAAG,KAAK;MACrB,MAAMe,OAAO,GAAGV,KAAK,CAACN,KAAK,CACxBiB,SAAS,CAAEJ,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKN,OAAO,CAACM,GAAG,CAAC;MAC1CR,KAAK,CAACN,KAAK,CAACgB,OAAO,CAAC,GAAG;QACrB,GAAGV,KAAK,CAACN,KAAK,CAACgB,OAAO,CAAC;QACvB,GAAGR;MACL,CAAC;IACH;EACJ,CAAC;EACFU,QAAQ,EAAE,CAAE;AACb,CAAC,CAAC;AAEF,OAAO,MAAM;EAACC,UAAU;EAAEC;AAAU,CAAC,GAAGlB,SAAS,CAACmB,OAAO;AACzD,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}