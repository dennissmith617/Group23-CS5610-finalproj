{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//import tuits from './tuits.json';\nimport { findTuitsThunk } from \"../../services/tuits-thunks\";\nconst initialState = {\n  tuits: [],\n  loading: false\n};\nconst tuitsSlice = createSlice({\n  name: 'tuits',\n  initialState,\n  reducers: {\n    deleteTuit(state, action) {},\n    createTuit(state, action) {},\n    updateTuit(state, action) {}\n  },\n  extraReducers: {\n    [findTuitsThunk.pending]: state => {\n      state.loading = true;\n      state.tuits = [];\n    },\n    [findTuitsThunk.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.loading = false;\n      state.tuits = payload;\n    },\n    [findTuitsThunk.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error;\n    }\n  }\n});\nexport const {\n  createTuit,\n  deleteTuit,\n  updateTuit\n} = tuitsSlice.actions;\nexport default tuitsSlice.reducer;","map":{"version":3,"names":["createSlice","findTuitsThunk","initialState","tuits","loading","tuitsSlice","name","reducers","deleteTuit","state","action","createTuit","updateTuit","extraReducers","pending","fulfilled","payload","rejected","error","actions","reducer"],"sources":["C:/2023/spring/webdev/tuiter-react-web-app/src/tuiter/tuits/tuits-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//import tuits from './tuits.json';\r\nimport {findTuitsThunk} from \"../../services/tuits-thunks\";\r\n\r\nconst initialState = {\r\n  tuits: [],\r\n  loading: false\r\n}\r\n\r\n   \r\n\r\nconst tuitsSlice = createSlice({\r\n name: 'tuits',\r\n initialState,\r\n reducers: {\r\n    deleteTuit(state, action) {\r\n\r\n    },\r\n\r\n    createTuit(state, action) {\r\n\r\n    },\r\n\r\n    updateTuit(state, action){\r\n\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [findTuitsThunk.pending]:\r\n       (state) => {\r\n          state.loading = true\r\n          state.tuits = []\r\n    },\r\n    [findTuitsThunk.fulfilled]:\r\n       (state, { payload }) => {\r\n          state.loading = false\r\n          state.tuits = payload\r\n    },\r\n    [findTuitsThunk.rejected]:\r\n       (state, action) => {\r\n          state.loading = false\r\n          state.error = action.error\r\n    }\r\n  }, \r\n});\r\nexport const {createTuit, deleteTuit, updateTuit} = tuitsSlice.actions;\r\nexport default tuitsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAAQC,cAAc,QAAO,6BAA6B;AAE1D,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;AACX,CAAC;AAID,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACPC,UAAU,CAACC,KAAK,EAAEC,MAAM,EAAE,CAE1B,CAAC;IAEDC,UAAU,CAACF,KAAK,EAAEC,MAAM,EAAE,CAE1B,CAAC;IAEDE,UAAU,CAACH,KAAK,EAAEC,MAAM,EAAC,CAEzB;EACF,CAAC;EACDG,aAAa,EAAE;IACb,CAACZ,cAAc,CAACa,OAAO,GACnBL,KAAK,IAAK;MACRA,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACN,KAAK,GAAG,EAAE;IACtB,CAAC;IACD,CAACF,cAAc,CAACc,SAAS,GACtB,CAACN,KAAK,WAAkB;MAAA,IAAhB;QAAEO;MAAQ,CAAC;MAChBP,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,GAAGa,OAAO;IAC3B,CAAC;IACD,CAACf,cAAc,CAACgB,QAAQ,GACrB,CAACR,KAAK,EAAEC,MAAM,KAAK;MAChBD,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACS,KAAK,GAAGR,MAAM,CAACQ,KAAK;IAChC;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAACP,UAAU;EAAEH,UAAU;EAAEI;AAAU,CAAC,GAAGP,UAAU,CAACc,OAAO;AACtE,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}