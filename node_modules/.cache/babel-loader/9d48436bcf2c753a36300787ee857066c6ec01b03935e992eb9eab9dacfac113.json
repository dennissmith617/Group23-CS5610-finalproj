{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//import tuits from './tuits.json';\nimport { createTuitThunk, deleteTuitThunk, findTuitsThunk } from \"../../services/tuits-thunks\";\nconst initialState = {\n  tuits: [],\n  loading: false\n};\nconst tuitsSlice = createSlice({\n  name: 'tuits',\n  initialState,\n  reducers: {\n    deleteTuit(state, action) {},\n    createTuit(state, action) {},\n    updateTuit(state, action) {}\n  },\n  extraReducers: {\n    [findTuitsThunk.pending]: state => {\n      state.loading = true;\n      state.tuits = [];\n    },\n    [findTuitsThunk.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.loading = false;\n      state.tuits = payload;\n    },\n    [findTuitsThunk.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error;\n    },\n    [deleteTuitThunk.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.loading = false;\n      state.tuits = state.tuits.filter(t => t._id !== payload);\n    },\n    [createTuitThunk.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.loading = false;\n      state.tuits.push(payload);\n    },\n    [updateTuitThunk.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.loading = false;\n      const tuitNdx = state.tuits.findIndex(t => t._id === payload._id);\n      state.tuits[tuitNdx] = {\n        ...state.tuits[tuitNdx],\n        ...payload\n      };\n    }\n  }\n});\nexport const {\n  createTuit,\n  deleteTuit,\n  updateTuit\n} = tuitsSlice.actions;\nexport default tuitsSlice.reducer;","map":{"version":3,"names":["createSlice","createTuitThunk","deleteTuitThunk","findTuitsThunk","initialState","tuits","loading","tuitsSlice","name","reducers","deleteTuit","state","action","createTuit","updateTuit","extraReducers","pending","fulfilled","payload","rejected","error","filter","t","_id","push","updateTuitThunk","tuitNdx","findIndex","actions","reducer"],"sources":["C:/2023/spring/webdev/tuiter-react-web-app/src/tuiter/tuits/tuits-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//import tuits from './tuits.json';\r\nimport {createTuitThunk, deleteTuitThunk, findTuitsThunk} from \"../../services/tuits-thunks\";\r\n\r\nconst initialState = {\r\n  tuits: [],\r\n  loading: false\r\n}\r\n\r\n   \r\n\r\nconst tuitsSlice = createSlice({\r\n name: 'tuits',\r\n initialState,\r\n reducers: {\r\n    deleteTuit(state, action) {\r\n\r\n    },\r\n\r\n    createTuit(state, action) {\r\n\r\n    },\r\n\r\n    updateTuit(state, action){\r\n\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [findTuitsThunk.pending]:\r\n       (state) => {\r\n          state.loading = true\r\n          state.tuits = []\r\n    },\r\n\r\n    [findTuitsThunk.fulfilled]:\r\n       (state, { payload }) => {\r\n          state.loading = false\r\n          state.tuits = payload\r\n    },\r\n\r\n    [findTuitsThunk.rejected]:\r\n       (state, action) => {\r\n          state.loading = false\r\n          state.error = action.error\r\n    },\r\n\r\n    [deleteTuitThunk.fulfilled] :\r\n    (state, { payload }) => {\r\n    state.loading = false\r\n    state.tuits = state.tuits\r\n      .filter(t => t._id !== payload)\r\n    },\r\n\r\n    [createTuitThunk.fulfilled]:\r\n    (state, { payload }) => {\r\n      state.loading = false\r\n      state.tuits.push(payload)\r\n    },\r\n\r\n    [updateTuitThunk.fulfilled]:\r\n    (state, { payload }) => {\r\n      state.loading = false\r\n      const tuitNdx = state.tuits\r\n        .findIndex((t) => t._id === payload._id)\r\n      state.tuits[tuitNdx] = {\r\n        ...state.tuits[tuitNdx],\r\n        ...payload\r\n      }\r\n    }\r\n  }, \r\n});\r\nexport const {createTuit, deleteTuit, updateTuit} = tuitsSlice.actions;\r\nexport default tuitsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAAQC,eAAe,EAAEC,eAAe,EAAEC,cAAc,QAAO,6BAA6B;AAE5F,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;AACX,CAAC;AAID,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC9BQ,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACPC,UAAU,CAACC,KAAK,EAAEC,MAAM,EAAE,CAE1B,CAAC;IAEDC,UAAU,CAACF,KAAK,EAAEC,MAAM,EAAE,CAE1B,CAAC;IAEDE,UAAU,CAACH,KAAK,EAAEC,MAAM,EAAC,CAEzB;EACF,CAAC;EACDG,aAAa,EAAE;IACb,CAACZ,cAAc,CAACa,OAAO,GACnBL,KAAK,IAAK;MACRA,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACN,KAAK,GAAG,EAAE;IACtB,CAAC;IAED,CAACF,cAAc,CAACc,SAAS,GACtB,CAACN,KAAK,WAAkB;MAAA,IAAhB;QAAEO;MAAQ,CAAC;MAChBP,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,GAAGa,OAAO;IAC3B,CAAC;IAED,CAACf,cAAc,CAACgB,QAAQ,GACrB,CAACR,KAAK,EAAEC,MAAM,KAAK;MAChBD,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACS,KAAK,GAAGR,MAAM,CAACQ,KAAK;IAChC,CAAC;IAED,CAAClB,eAAe,CAACe,SAAS,GAC1B,CAACN,KAAK,YAAkB;MAAA,IAAhB;QAAEO;MAAQ,CAAC;MACnBP,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CACtBgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKL,OAAO,CAAC;IACjC,CAAC;IAED,CAACjB,eAAe,CAACgB,SAAS,GAC1B,CAACN,KAAK,YAAkB;MAAA,IAAhB;QAAEO;MAAQ,CAAC;MACjBP,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,CAACmB,IAAI,CAACN,OAAO,CAAC;IAC3B,CAAC;IAED,CAACO,eAAe,CAACR,SAAS,GAC1B,CAACN,KAAK,YAAkB;MAAA,IAAhB;QAAEO;MAAQ,CAAC;MACjBP,KAAK,CAACL,OAAO,GAAG,KAAK;MACrB,MAAMoB,OAAO,GAAGf,KAAK,CAACN,KAAK,CACxBsB,SAAS,CAAEL,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKL,OAAO,CAACK,GAAG,CAAC;MAC1CZ,KAAK,CAACN,KAAK,CAACqB,OAAO,CAAC,GAAG;QACrB,GAAGf,KAAK,CAACN,KAAK,CAACqB,OAAO,CAAC;QACvB,GAAGR;MACL,CAAC;IACH;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAACL,UAAU;EAAEH,UAAU;EAAEI;AAAU,CAAC,GAAGP,UAAU,CAACqB,OAAO;AACtE,eAAerB,UAAU,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}