{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport tuits from './tuits.json';\nconst currentUser = {\n  \"userName\": \"NASA\",\n  \"handle\": \"@nasa\",\n  \"avatar_img\": \"nasa.png\"\n};\nconst templateTuit = {\n  ...currentUser,\n  \"topic\": \"Space\",\n  \"time\": \"2h\",\n  \"liked\": false,\n  \"replies\": 0,\n  \"retuits\": 0,\n  \"likes\": 0\n};\nconst tuitsSlice = createSlice({\n  name: 'tuits',\n  initialState: tuits,\n  reducers: {\n    deleteTuit(state, action) {\n      const index = state.findIndex(tuit => tuit._id === action.payload);\n      state.splice(index, 1);\n    },\n    createTuit(state, action) {\n      state.unshift({\n        ...action.payload,\n        ...templateTuit,\n        _id: new Date().getTime()\n      });\n    },\n    updateTuit(state, action) {\n      const index1 = state.findIndex(tuit => tuit._id === action.payload);\n      let newtuit = {\n        ...tuits[index1]\n      };\n      if (newtuit.liked == true) {\n        newtuit.liked = false;\n        newtuit.likes = newtuit.likes--;\n      }\n    }\n  }\n});\nexport const {\n  createTuit,\n  deleteTuit\n} = tuitsSlice.actions;\nexport default tuitsSlice.reducer;","map":{"version":3,"names":["createSlice","tuits","currentUser","templateTuit","tuitsSlice","name","initialState","reducers","deleteTuit","state","action","index","findIndex","tuit","_id","payload","splice","createTuit","unshift","Date","getTime","updateTuit","index1","newtuit","liked","likes","actions","reducer"],"sources":["C:/2023/spring/webdev/tuiter-react-web-app/src/tuiter/tuits/tuits-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport tuits from './tuits.json';\r\n\r\nconst currentUser = {\r\n    \"userName\": \"NASA\",\r\n    \"handle\": \"@nasa\",\r\n    \"avatar_img\": \"nasa.png\",\r\n   };\r\n   \r\n   const templateTuit = {\r\n    ...currentUser,\r\n    \"topic\": \"Space\",\r\n    \"time\": \"2h\",\r\n    \"liked\": false,\r\n    \"replies\": 0,\r\n    \"retuits\": 0,\r\n    \"likes\": 0,\r\n   }\r\n   \r\n\r\nconst tuitsSlice = createSlice({\r\n name: 'tuits',\r\n initialState: tuits,\r\n reducers: {\r\n    deleteTuit(state, action) {\r\n      const index = state\r\n        .findIndex(tuit =>\r\n            tuit._id === action.payload);\r\n      state.splice(index, 1);\r\n    },\r\n\r\n    createTuit(state, action) {\r\n      state.unshift({\r\n        ...action.payload,\r\n        ...templateTuit,\r\n        _id: (new Date()).getTime(),\r\n      })\r\n    },\r\n\r\n    updateTuit(state, action){\r\n      const index1 = state.findIndex(tuit => tuit._id === action.payload);\r\n      let newtuit = {...tuits[index1]};\r\n      if(newtuit.liked == true){\r\n        newtuit.liked = false;\r\n        newtuit.likes = newtuit.likes--\r\n      }\r\n    }\r\n  } \r\n});\r\nexport const {createTuit, deleteTuit} = tuitsSlice.actions;\r\nexport default tuitsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,cAAc;AAEhC,MAAMC,WAAW,GAAG;EAChB,UAAU,EAAE,MAAM;EAClB,QAAQ,EAAE,OAAO;EACjB,YAAY,EAAE;AACf,CAAC;AAED,MAAMC,YAAY,GAAG;EACpB,GAAGD,WAAW;EACd,OAAO,EAAE,OAAO;EAChB,MAAM,EAAE,IAAI;EACZ,OAAO,EAAE,KAAK;EACd,SAAS,EAAE,CAAC;EACZ,SAAS,EAAE,CAAC;EACZ,OAAO,EAAE;AACV,CAAC;AAGJ,MAAME,UAAU,GAAGJ,WAAW,CAAC;EAC9BK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEL,KAAK;EACnBM,QAAQ,EAAE;IACPC,UAAU,CAACC,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMC,KAAK,GAAGF,KAAK,CAChBG,SAAS,CAACC,IAAI,IACXA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACK,OAAO,CAAC;MAClCN,KAAK,CAACO,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IACxB,CAAC;IAEDM,UAAU,CAACR,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACS,OAAO,CAAC;QACZ,GAAGR,MAAM,CAACK,OAAO;QACjB,GAAGZ,YAAY;QACfW,GAAG,EAAG,IAAIK,IAAI,EAAE,CAAEC,OAAO;MAC3B,CAAC,CAAC;IACJ,CAAC;IAEDC,UAAU,CAACZ,KAAK,EAAEC,MAAM,EAAC;MACvB,MAAMY,MAAM,GAAGb,KAAK,CAACG,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACnE,IAAIQ,OAAO,GAAG;QAAC,GAAGtB,KAAK,CAACqB,MAAM;MAAC,CAAC;MAChC,IAAGC,OAAO,CAACC,KAAK,IAAI,IAAI,EAAC;QACvBD,OAAO,CAACC,KAAK,GAAG,KAAK;QACrBD,OAAO,CAACE,KAAK,GAAGF,OAAO,CAACE,KAAK,EAAE;MACjC;IACF;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAACR,UAAU;EAAET;AAAU,CAAC,GAAGJ,UAAU,CAACsB,OAAO;AAC1D,eAAetB,UAAU,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}