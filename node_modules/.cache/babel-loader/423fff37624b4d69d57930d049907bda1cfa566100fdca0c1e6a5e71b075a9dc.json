{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { findAllBooks, createBook, updateBook, deleteBook, findAllBooksWithQuerry } from \"./books-service\";\nexport const findAllBooksThunk = createAsyncThunk(\"tuiter/findAllBooks\", async () => {\n  const books = await findAllBooks();\n  return books;\n});\nexport const createBookThunk = createAsyncThunk(\"tuiter/createBook\", async tuit => {\n  const bookCreated = await createBook(tuit);\n  return bookCreated;\n});\nexport const updateBookThunk = createAsyncThunk(\"tuiter/updateBook\", async book => {\n  const status = await updateBook(book);\n  return book;\n});\nexport const deleteBookThunk = createAsyncThunk(\"tuiter/deleteBook\", async bookId => {\n  const status = await deleteBook(bookId);\n  return bookId;\n});\nexport const findBooksWithQuerryThunk = createAsyncThunk(\"tuiter/findAllBooksQuerry\", async data => {\n  const books = await findAllBooksWithQuerry(data);\n  return books;\n});","map":{"version":3,"names":["createAsyncThunk","findAllBooks","createBook","updateBook","deleteBook","findAllBooksWithQuerry","findAllBooksThunk","books","createBookThunk","tuit","bookCreated","updateBookThunk","book","status","deleteBookThunk","bookId","findBooksWithQuerryThunk","data"],"sources":["C:/Nesara_Webev_Project/Group23-CS5610-finalproj/src/readit/search/books-thunks.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n  findAllBooks,\r\n  createBook,\r\n  updateBook,\r\n  deleteBook,\r\n  findAllBooksWithQuerry,\r\n} from \"./books-service\";\r\n\r\nexport const findAllBooksThunk = createAsyncThunk(\r\n  \"tuiter/findAllBooks\",\r\n  async () => {\r\n    const books = await findAllBooks();\r\n    return books;\r\n  }\r\n);\r\n\r\nexport const createBookThunk = createAsyncThunk(\r\n  \"tuiter/createBook\",\r\n  async (tuit) => {\r\n    const bookCreated = await createBook(tuit);\r\n    return bookCreated;\r\n  }\r\n);\r\n\r\nexport const updateBookThunk = createAsyncThunk(\r\n  \"tuiter/updateBook\",\r\n  async (book) => {\r\n    const status = await updateBook(book);\r\n    return book;\r\n  }\r\n);\r\n\r\nexport const deleteBookThunk = createAsyncThunk(\r\n  \"tuiter/deleteBook\",\r\n  async (bookId) => {\r\n    const status = await deleteBook(bookId);\r\n    return bookId;\r\n  }\r\n);\r\n\r\nexport const findBooksWithQuerryThunk = createAsyncThunk(\r\n  \"tuiter/findAllBooksQuerry\",\r\n  async (data) => {\r\n    const books = await findAllBooksWithQuerry(data);\r\n    return books;\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SACEC,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,sBAAsB,QACjB,iBAAiB;AAExB,OAAO,MAAMC,iBAAiB,GAAGN,gBAAgB,CAC/C,qBAAqB,EACrB,YAAY;EACV,MAAMO,KAAK,GAAG,MAAMN,YAAY,EAAE;EAClC,OAAOM,KAAK;AACd,CAAC,CACF;AAED,OAAO,MAAMC,eAAe,GAAGR,gBAAgB,CAC7C,mBAAmB,EACnB,MAAOS,IAAI,IAAK;EACd,MAAMC,WAAW,GAAG,MAAMR,UAAU,CAACO,IAAI,CAAC;EAC1C,OAAOC,WAAW;AACpB,CAAC,CACF;AAED,OAAO,MAAMC,eAAe,GAAGX,gBAAgB,CAC7C,mBAAmB,EACnB,MAAOY,IAAI,IAAK;EACd,MAAMC,MAAM,GAAG,MAAMV,UAAU,CAACS,IAAI,CAAC;EACrC,OAAOA,IAAI;AACb,CAAC,CACF;AAED,OAAO,MAAME,eAAe,GAAGd,gBAAgB,CAC7C,mBAAmB,EACnB,MAAOe,MAAM,IAAK;EAChB,MAAMF,MAAM,GAAG,MAAMT,UAAU,CAACW,MAAM,CAAC;EACvC,OAAOA,MAAM;AACf,CAAC,CACF;AAED,OAAO,MAAMC,wBAAwB,GAAGhB,gBAAgB,CACtD,2BAA2B,EAC3B,MAAOiB,IAAI,IAAK;EACd,MAAMV,KAAK,GAAG,MAAMF,sBAAsB,CAACY,IAAI,CAAC;EAChD,OAAOV,KAAK;AACd,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}