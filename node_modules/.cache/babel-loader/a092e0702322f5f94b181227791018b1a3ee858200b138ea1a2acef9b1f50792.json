{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as service from \"./tuits-service\";\nexport const findTuitsThunk = createAsyncThunk('tuits/findTuits', async () => await service.findTuits());\nexport const deleteTuitThunk = createAsyncThunk('tuits/deleteTuit', async tuitId => {\n  await service.deleteTuit(tuitId);\n  return tuitId;\n});\nexport const createTuitThunk = createAsyncThunk('tuits/createTuit', async tuit => {\n  const newTuit = await service.createTuit(tuit);\n  return newTuit;\n});","map":{"version":3,"names":["createAsyncThunk","service","findTuitsThunk","findTuits","deleteTuitThunk","tuitId","deleteTuit","createTuitThunk","tuit","newTuit","createTuit"],"sources":["C:/2023/spring/webdev/tuiter-react-web-app/src/services/tuits-thunks.js"],"sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport * as service from \"./tuits-service\"\r\n\r\nexport const findTuitsThunk = createAsyncThunk(\r\n  'tuits/findTuits', async () =>\r\n    await service.findTuits()\r\n)\r\n\r\nexport const deleteTuitThunk = createAsyncThunk(\r\n    'tuits/deleteTuit',\r\n    async (tuitId) => {\r\n      await service.deleteTuit(tuitId)\r\n      return tuitId\r\n  })\r\n\r\n  export const createTuitThunk = createAsyncThunk(\r\n    'tuits/createTuit',\r\n    async (tuit) => {\r\n      const newTuit = await service.createTuit(tuit)\r\n      return newTuit\r\n  })\r\n  "],"mappings":"AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,OAAO,KAAKC,OAAO,MAAM,iBAAiB;AAE1C,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC5C,iBAAiB,EAAE,YACjB,MAAMC,OAAO,CAACE,SAAS,EAAE,CAC5B;AAED,OAAO,MAAMC,eAAe,GAAGJ,gBAAgB,CAC3C,kBAAkB,EAClB,MAAOK,MAAM,IAAK;EAChB,MAAMJ,OAAO,CAACK,UAAU,CAACD,MAAM,CAAC;EAChC,OAAOA,MAAM;AACjB,CAAC,CAAC;AAEF,OAAO,MAAME,eAAe,GAAGP,gBAAgB,CAC7C,kBAAkB,EAClB,MAAOQ,IAAI,IAAK;EACd,MAAMC,OAAO,GAAG,MAAMR,OAAO,CAACS,UAAU,CAACF,IAAI,CAAC;EAC9C,OAAOC,OAAO;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}